<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>DavHau - David Hauer</title>
    <link>/</link>
    <description>Recent content on DavHau - David Hauer</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 22 Feb 2023 18:44:15 +0700</lastBuildDate><atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>drv-parts</title>
      <link>/projects/drv-parts/</link>
      <pubDate>Wed, 22 Feb 2023 18:44:15 +0700</pubDate>
      
      <guid>/projects/drv-parts/</guid>
      <description>drv-parts Link to heading drv-parts replaces callPackage, override, overrideAttrs, ... as a mechanism for configuring packages.
It makes package configuration feel like nixos system configuration.
Benefits Link to heading No more override functions Link to heading Changing options of packages in nixpkgs can require chaining different override functions like this:
{ htop-mod = let htop-overridden = pkgs.htop.overrideAttrs (old: { pname = &amp;#34;htop-mod&amp;#34;; }); in htop-overridden.override (old: { sensorsSupport = false; }); } &amp;hellip; while doing the same using drv-parts looks like this:</description>
    </item>
    
  </channel>
</rss>
